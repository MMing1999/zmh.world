---
title: 行 · Doing
layout: layouts/base.njk
section: xing
pageCSS: '/assets/Css/xing.css'

---

{# ===============================
   ① HERO：图片展示（全宽section，突破1400px限制）
   =============================== #}
<section class="xing-hero-fullwidth">
  <div class="xing-hero-container">
    <div class="xing-hero">
      <div class="hero-images">
        <div class="hero-pic-1">
          <img src="{{ '/assets/Pics/xing-portfolo-01-temp.jpg' | url }}" alt="Portfolio 1">
          <div class="hero-caption">
            <h2>Portfolio 1</h2>
            <p>作品集描述：一句话概述/主打亮点。这里会链接到更炫的外部 portfolio 站。</p>
          </div>
        </div>

        <div class="hero-pic-2">
          <img src="{{ '/assets/Pics/xing-portfolo-02-temp.jpg' | url }}" alt="Portfolio 2">
          <div class="hero-caption">
            <h2>Portfolio 2</h2>
            <p>第二组封面与描述（点击底部条切换）。</p>
          </div>
        </div>

        <div class="hero-pic-3">
          <img src="{{ '/assets/Pics/xing-portfolo-03-temp.jpg' | url }}" alt="Portfolio 3">
          <div class="hero-caption">
            <h2>Portfolio 3</h2>
            <p>第三组封面与描述。</p>
          </div>
        </div>

        <div class="hero-pic-4">
          <img src="{{ '/assets/Pics/xing/xing-portfolo-04-temp.jpg' | url }}" alt="Portfolio 4">
          <div class="hero-caption">
            <h2>Portfolio 4</h2>
            <p>第四组封面与描述。</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

{# ===============================
   ② 页面内容（保持1400px限制）
   =============================== #}
<div class="xing-content">
  <div class="hero-intro">
    <div class="wrap">
      <h1>行 · Doing</h1>
      <p class="xing-title__description">这里展示一些真实或虚构项目的记录。下面是分组标签（TagBar）与项目卡片画廊。</p>
    </div>
  </div>

  {# ===============================
     ③ 标题（居中）
     =============================== #}
  <section class="xing-title">
    <h2>行动库</h2>
  </section>

  {# ===============================
     ④ 搜索框和分类标签（同一行）
     =============================== #}
<section class="xing-controls" aria-label="搜索和分类">
  <div class="xing-controls__container">
    {# 分类标签（左侧） #}
    <div class="xing-filter" aria-label="分类切换">
      {% set keys = [
        {key:"all",     label:"全部"},
        {key:"design",  label:"设计"},
        {key:"art",     label:"艺术"},
        {key:"dev",     label:"开发"},
        {key:"product", label:"产品"},
        {key:"startup", label:"创业"}
      ] %}
      <ul class="xing-filter__list">
        {% for k in keys %}
          <li>
            <button
              class="xing-filter__btn{% if k.key == 'all' %} is-active{% endif %}"
              data-key="{{ k.key }}"
              type="button"
            >{{ k.label }}</button>
          </li>
        {% endfor %}
      </ul>
    </div>
    
    {# 搜索框（右侧） #}
    <div class="xing-searchbar">
      <input id="xingSearch" type="search" placeholder="搜索项目…">
    </div>
  </div>
</section>

{# ===============================
   ⑥ 项目卡片画廊（全部渲染，前端过滤）
   - 数据来源：collections.xing_all（在 .eleventy.js 里已定义）
   - 显示策略：
     · 封面：优先使用 front-matter 的 cover；没有就用默认图
     · 徽章：设计/艺术/开发/产品/创业（按优先级取第一个匹配）
   =============================== #}
{% set all = collections.xing_all or [] %}
<ul class="xing-card-grid" id="xingGallery">
  {% for p in all %}
    {% set cats = p.data.categories or [] %}

    {# 计算徽章（优先级） #}
    {% set badge = "其他" %}
    {% if 'design'  in cats %}{% set badge = "设计"  %}
    {% elif 'art'   in cats %}{% set badge = "艺术"  %}
    {% elif 'dev'   in cats %}{% set badge = "开发"  %}
    {% elif 'product' in cats %}{% set badge = "产品"  %}
    {% elif 'startup' in cats %}{% set badge = "创业"  %}{% endif %}

    <li class="xing-card"
        data-cats="{{ cats | join(',') }}"
        data-date="{{ p.date | fmtDate }}">
      <a class="xing-card__link" href="{{ p.url }}">

        {# —— 顶部：日期 + 标题 —— #}
        <div class="xing-card__header">
          <div class="xing-card__date" data-date="{{ p.date | fmtDate }}">
            <span class="xing-card__date-year"></span>
            <span class="xing-card__date-separator"></span>
            <span class="xing-card__date-month"></span>
            <span class="xing-card__date-day-separator"></span>
            <span class="xing-card__date-day"></span>
          </div>
          <h4 class="xing-card__title">{{ p.data.title }}</h4>
        </div>

        {# —— 分类标签 —— #}
        {% if p.data.categories %}
          <div class="xing-card__categories">
            {% for c in p.data.categories %}
              {% set key = (c | lower) %}
              {% set label = c %}
              {% if key == 'design'  %}{% set label = '设计'  %}{% endif %}
              {% if key == 'art'     %}{% set label = '艺术'  %}{% endif %}
              {% if key == 'dev'     %}{% set label = '开发'  %}{% endif %}
              {% if key == 'product' %}{% set label = '产品'  %}{% endif %}
              {% if key == 'startup' %}{% set label = '创业'  %}{% endif %}
              <span class="xing-card__category">{{ label }}</span>
            {% endfor %}
          </div>
        {% endif %}

        {# —— 封面图片 —— #}
        {% set coverSrc = p.data.cover %}
        <div class="xing-card__media">
          <img class="xing-card__cover"
               src="{{ (coverSrc or '/assets/Pics/xing-portfolo-01-temp.jpg') | url }}"
               alt="">
        </div>

        {# —— 底部：标签 + 简介 —— #}
        <div class="xing-card__footer">
          {# 标签 #}
          {% if p.data.tags %}
            <div class="xing-card__tags">
              {% for t in p.data.tags %}
                <span class="xing-card__tag">#{{ t }}</span>
              {% endfor %}
            </div>
          {% endif %}

          {# 简介 #}
          {% if p.data.summary %}
            <p class="xing-card__summary">{{ p.data.summary }}</p>
          {% endif %}
        </div>
      </a>
    </li>
  {% endfor %}
</ul>

{# ===============================
   ⑦ 交互脚本
   - Tag 过滤：点击切换类别
   - 搜索：按标题/摘要/标签的可见文本过滤
   - 默认显示：全部 + 空搜索
   =============================== #}
<script>
  (function () {
    const btns   = document.querySelectorAll('.xing-filter__btn');
    const list   = document.getElementById('xingGallery');
    const cards  = Array.from(list.querySelectorAll('.xing-card'));
    const search = document.getElementById('xingSearch');

    let currentKey = 'all';

    // 处理日期显示
    function formatDates() {
      const dateElements = document.querySelectorAll('.xing-card__date');
      dateElements.forEach(dateEl => {
        const fullDate = dateEl.dataset.date;
        if (fullDate) {
          const parts = fullDate.split('-');
          const year = parts[0];
          const month = parts[1];
          const day = parts[2];
          
          const yearEl = dateEl.querySelector('.xing-card__date-year');
          const monthEl = dateEl.querySelector('.xing-card__date-month');
          const dayEl = dateEl.querySelector('.xing-card__date-day');
          
          if (yearEl) yearEl.textContent = year;
          if (monthEl) monthEl.textContent = month;
          if (dayEl) dayEl.textContent = day;
        }
      });
    }

    // 是否匹配某个卡片
    function matchCard(li, key, q) {
      const cats = (li.dataset.cats || '').split(',').filter(Boolean);
      const byCat = key === 'all' || cats.includes(key);
      if (!q) return byCat;
      const text = li.innerText.toLowerCase();
      return byCat && text.includes(q.toLowerCase());
    }

    // 应用过滤
    function apply() {
      const q = (search && search.value || '').trim();
      cards.forEach(li => {
        li.style.display = matchCard(li, currentKey, q) ? '' : 'none';
      });
    }

    // 绑定 tag 切换
    btns.forEach(b => b.addEventListener('click', () => {
      currentKey = b.dataset.key;
      btns.forEach(x => x.classList.toggle('is-active', x === b));
      apply();
    }));

    // 绑定搜索
    if (search) search.addEventListener('input', apply);

    // 初始：显示全部
    apply();
    
    // 格式化日期显示
    formatDates();
  })();
</script>

{# ===============================
   ⑧（可选）HERO 的小脚本：点击底部 dot 切换
   =============================== #}
<script>
  (function () {
    const slides = Array.from(document.querySelectorAll('#xingSlides .slide'));
    const dots   = Array.from(document.querySelectorAll('#xingControls .dot'));
    if (!slides.length || !dots.length) return;

    let i = 0;
    function go(n){
      i = n;
      slides.forEach((s,idx)=> s.classList.toggle('is-active', idx===i));
      dots.forEach((d,idx)=> d.classList.toggle('is-active', idx===i));
    }
    dots.forEach((d,idx)=> d.addEventListener('click', ()=> go(idx)));

    // 如需自动轮播，取消下一行注释
    // setInterval(()=> go((i+1)%slides.length), 5000);
  })();
</script>

</div> {# 结束 xing-content 容器 #}